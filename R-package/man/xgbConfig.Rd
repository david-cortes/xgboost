% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/xgb.config.R
\name{xgb.set.config, xgb.get.config}
\alias{xgb.set.config, xgb.get.config}
\alias{xgb.set.config}
\alias{xgb.get.config}
\title{Set and get global configuration}
\usage{
xgb.set.config(...)

xgb.get.config()
}
\arguments{
\item{...}{List of parameters to be set, as keyword arguments}
}
\value{
\code{xgb.set.config} returns \code{TRUE} to signal success. \code{xgb.get.config} returns
a list containing all global-scope parameters and their values.
}
\description{
Global configuration consists of a collection of parameters that can be applied in the global
scope. See \url{https://xgboost.readthedocs.io/en/stable/parameter.html} for the full list of
parameters supported in the global configuration. Use \code{xgb.set.config} to update the
values of one or more global-scope parameters. Use \code{xgb.get.config} to fetch the current
values of all global-scope parameters (listed in
\url{https://xgboost.readthedocs.io/en/stable/parameter.html}).
}
\details{
Note that some functions might use a globally-configured number of threads, which is not
managed by this configuration. Typically, XGBoost methods accept an \code{nthreads} parameter
controlling the number of parallel  threads that will be used, but some functionalities
might execute functions before this parameter can be supplied.

In such cases, the global number of threads is taken from the configured number of OpenMP
(OMP) threads, which if not set, will default to the maximum number of available threads.
The number of OMP threads in turn can be configured through an environment variable
\code{OMP_NUM_THREADS} (which needs to be set before R is started), or alternatively, can be
changed in an R session through package \code{RhpcBLASctl}, by calling function \code{RhpcBLASctl::omp_set_num_threads}.
}
\examples{
# Set verbosity level to silent (0)
xgb.set.config(verbosity = 0)
# Now global verbosity level is 0
config <- xgb.get.config()
print(config$verbosity)
# Set verbosity level to warning (1)
xgb.set.config(verbosity = 1)
# Now global verbosity level is 1
config <- xgb.get.config()
print(config$verbosity)
}
